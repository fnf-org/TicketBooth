apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "chart.fullname" . }}
  labels:
    {{- include "chart.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "chart.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "chart.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "chart.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
        - name: gcp-creds
          image: rchalumeau/gec:latest
          imagePullPolicy: IfNotPresent
          restartPolicy: Always
          ports:
            - containerPort: 8080
          securityContext:
            runAsNonRoot: true
            readOnlyRootFilesystem: true
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - all
          volumeMounts:
            - name: gcp-creds
              mountPath: /tmp/gcloud
        - name: cloud-sql-proxy
          image: gcr.io/cloud-sql-connectors/cloud-sql-proxy:2.8.0
          args:
            - "--private-ip"
            - "--structured-logs"
            - "--port=5432"
            - "--auto-iam-authn"
            - {{ .Values.postgresql.instance }}
          securityContext:
            runAsNonRoot: true
          restartPolicy: Always
          resources:
            requests:
              memory: "2Gi"
              cpu:    "1"
          volumeMounts:
            - name: gcp-creds
              mountPath: /tmp/gcloud
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
          livenessProbe:
            timeoutSeconds: 5
            httpGet:
              path: /
              port: 3000
          readinessProbe:
            timeoutSeconds: 5
            httpGet:
              path: /
              port: 3000
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          env:
            # These should really come from a autogenerate value
            - name: TICKET_DB_HOST
              value: 127.0.0.1
            - name: TICKET_DB_PORT
              value: "5432"
            - name: TICKET_DB_NAME
              value: {{ .Values.postgresql.database }}
          envFrom:
            - secretRef:
              {{- if .Values.secret.name }}
                name: {{ .Values.secret.name }}
              {{- else }}
                name: {{ .Release.Name }}-secrets
              {{- end }}
            - configMapRef:
                name: {{ .Release.Name }}-config
          # Fix for: https://github.com/puma/puma/issues/2343
          lifecycle:
            preStop:
              exec:
                command: ['/bin/sh', '-c', 'sleep 15']
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: gcp-creds
          emptyDir: {}
