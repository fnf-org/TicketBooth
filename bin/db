#!/usr/bin/env bash
# vim: ft=bash
#
# @description This script connects to production database by setting up port-forwarding.
#    For this to work you must have kubectl installed, and gcloud authenticated.
#    If you are using `direnv` you should create a file .env.local and put
#    export PGPASSWORD="..." (real password of the production db connection).
#    Then you will be able to seamlessly connect via `bin/db`.

set +e

# shellcheck disable=2046
[[ -z ${BASHMATIC_HOME} ]] && export BASHMATIC_HOME="$(dirname $(cd $(dirname "${BASH_SOURCE[0]:-${(%):-%x}}") || exit 1; pwd -P))"
[[ -d "${BASHMATIC_HOME}" ]] || bash -c "$(curl -fsSL https://bashmatic.re1.re); bashmatic-install -v" 1>/dev/null 2>/dev/null
source "${BASHMATIC_HOME}/init.sh"

is.blank "${PGPASSWORD}" && warning "You will need to paste the PostgreSQL user's password, or set PGPASSWORD env var."

POD="pod/tickets-postgresql"
PGPORT="${PGPORT:-5433}"

kubectl get all | grep "${POD}" | grep -q Running || {
  error "No running PostgreSQL was detected under the pod name ${bldylw}${POD}"
  exit 1
}

netstat -an | grep LISTEN | grep -q "${PGPORT}" || {
   info "INFO: You must setup PostgreSQL port forwarding via:"
   info "  ${bldylw}kubectl port-forward service/tickets-postgresql ${PGPORT}:5432"
   info "in another terminal."
   exit 2
}

set -e

info "Connecting you to the Production Database..."
run.set-next show-output-on
run "psql -p 5433 -h localhost -U ticketsuser tickets" && success 'We hope you enjoyed your psql session ;-) Come back soon.'
