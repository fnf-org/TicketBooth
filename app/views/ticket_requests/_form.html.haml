- form_action_name = action_name == 'edit' ? :update : :create
- is_update = form_action_name == :update

%div{"data-controller": "tickets-request"}

  .card
    .card-header.bg-dark-subtle
      - unless is_update && !@event.admin?(current_user)
        - if @user
          %h4 Ticket Request for #{@user.name}
        - else
          %h5 Please sign-in or register to request tickets.

    .card-body
      = render 'shared/form_errors', resource: @ticket_request

      - if signed_in? && @user.present?
        Signed in as
        = "#{@user.name} <#{@user.email}>"
      - else
        = turbo_frame_tag :turbo_login do
          = render partial: "devise/shared/login", layout: false, locals: { resource: devise_mapping.singular, resource_name: devise_mapping.name, redirect_to: new_event_ticket_request_url(@event) }
        .vertical-20
        %hr
        .vertical-20
        = turbo_frame_tag :turbo_register do
          = render partial: "devise/shared/register", layout: false, locals: { resource: User.new, resource_name: devise_mapping.name, existing: false, redirect_to: new_event_ticket_request_url(@event) }

      #ticket-request-form
        - if !(signed_in? && @user)
        - else
          = form_for @ticket_request,
            url: { controller: :ticket_requests, action: form_action_name }, data: { "turbo-target": "_top", turbo: false } do |f|
            = f.hidden_field :event_id, value: @event.id

            - if is_update
              %hr
              %h4 Guests
              %p
                Please list everyone in your party including the kids. We do not (currently) send automated emails to any of the guests you specify.
              %p
                For adults â€” please list their full name, and an email address as shown in the below example.
              .content-fluid
                .row
                  .col-lg-6.col-xl-6.col-md-12.col-sm-12

                    - list_finalized = (@event.start_time - Time.current) < ::Event::GUEST_LIST_FINAL_WITHIN
                    - if list_finalized
                      %span.text-error
                        Guest list has already been finalized. If you need to update your guests, please email
                        = mail_to 'tickets@fnf.org'
                      %br
                    - else
                      %h4 Adult Guests
                      %h5 Examples:
                      %ul
                        %li DJ Carl Cox (as himself) &lt;carl@carlcox.com&gt;
                        %li John Digweed &lt;digweed@bedrock-records.com&gt;

                      - total_guests = @ticket_request.guest_count
                      - adult_guests = @ticket_request.adults - 1
                      - adult_guests.times do |guest_id|
                        - next if @ticket_request.guests[guest_id] == "#{@ticket_request.user.name} <#{@ticket_request.user.email}>"
                        = f.label "Adult Guest #{guest_id + 1}"
                        = f.text_field :guest_list, readonly: list_finalized, multiple: true, value: Array(@ticket_request.guests[0...adult_guests])[guest_id], style: 'width: 80%'

                  - if @ticket_request.kids.positive?
                    .col-lg-6.col-xl-6.col-md-12.col-sm-12

                      %h4 Kid Guests
                      %h5 Examples:
                      %ul
                        %li Taylor Swift, 12
                        %li Channing Tatum, 4
                      - kid_guests = @ticket_request.kids
                      - kid_guests.times do |guest_id|
                        = f.label "Kid Guest #{guest_id + 1}"
                        = f.text_field :guest_list, readonly: list_finalized, multiple: true, value: Array(@ticket_request.guests[(adult_guests)...total_guests])[guest_id], style: 'width: 80%'

            %hr
            %h4 How are you contributing to the event?
            .content-fluid
              .row
                .col-lg-6.col-xl-6.col-md-12.col-sm-12
                  .input-group-large
                    %fieldset
                      %p
                        = f.label :role_volunteer do
                          = f.label :role_volunteer, class: 'radio inline' do
                            = f.radio_button :role, TicketRequest::ROLE_VOLUNTEER,
                              data: { 'max-tickets' => TicketRequest::TICKET_LIMITS[TicketRequest::ROLE_VOLUNTEER] }
                            = TicketRequest::ROLES[TicketRequest::ROLE_VOLUNTEER]
                          = f.label :role_contributor, class: 'radio inline' do
                            = f.radio_button :role, TicketRequest::ROLE_CONTRIBUTOR,
                              data: { 'max-tickets' => TicketRequest::TICKET_LIMITS[TicketRequest::ROLE_CONTRIBUTOR] }
                            = TicketRequest::ROLES[TicketRequest::ROLE_CONTRIBUTOR]
                          = f.label :role_coordinator, class: 'radio inline' do
                            = f.radio_button :role, TicketRequest::ROLE_COORDINATOR,
                              data: { 'max-tickets' => TicketRequest::TICKET_LIMITS[TicketRequest::ROLE_COORDINATOR] }
                            = TicketRequest::ROLES[TicketRequest::ROLE_COORDINATOR]
                          = f.label :role_uber_coordinator, class: 'radio inline' do
                            = f.radio_button :role, TicketRequest::ROLE_UBER_COORDINATOR,
                              data: { 'max-tickets' => TicketRequest::TICKET_LIMITS[TicketRequest::ROLE_UBER_COORDINATOR] }
                            = TicketRequest::ROLES[TicketRequest::ROLE_UBER_COORDINATOR]
                          = f.label :role_other, class: 'radio inline' do
                            = f.radio_button :role, TicketRequest::ROLE_OTHER,
                              data: { 'max-tickets' => TicketRequest::TICKET_LIMITS[TicketRequest::ROLE_OTHER] }
                            = TicketRequest::ROLES[TicketRequest::ROLE_OTHER]

                .col-lg-6.col-xl-6.col-md-12.col-sm-12.align-content-md-center
                  %p.muted.role-explanation{ class: TicketRequest::ROLE_VOLUNTEER }
                    You are working one or more shifts at the event

                  %p.muted.role-explanation.hidden{ class: TicketRequest::ROLE_CONTRIBUTOR }
                    Working before and during or during and after; actively involved in
                    planning the campout e.g. a coordinator assistant or apprentice. Bringing
                    gear, driving trucks, art committee, etc.

                  %p.muted.role-explanation.hidden{ class: TicketRequest::ROLE_COORDINATOR }
                    Listed on the Coordinator Sheet as someone who is leading a major area of
                    camp out planning; working before, during, and after the event including
                    things like resource coordination, significant gear prep, pre/post-site
                    visits, etc.

                  %p.muted.role-explanation.hidden{ class: TicketRequest::ROLE_OTHER }
                    Art Grantee or DJ

                  = f.text_area :role_explanation,
                    placeholder: 'Briefly describe your role',
                    rows: 4, width: 400, maxlength: 200, required: false, style: 'min-width: 100% !important; font-size: 11pt;'

              .row
                .col-lg-6.col-xl-6.col-md-12.col-sm-12
                  = f.label :previous_contribution, 'What was your role last year?'
                  = f.text_area :previous_contribution, style: 'min-width: 100%',
                      rows: 2, maxlength: 250, required: false

                  - if signed_in? && @event.admin?(current_user) && form_action_name == :update
                    .well
                      = f.label :special_price, 'Total Special Price ($)'

                      %p.text-error
                        Editable by event admins only. Leave blank to use default price.
                      = f.number_field :special_price, class: 'input-small', min: 0

                  = f.label :adults, 'Number of adult tickets' + " @ $#{@event.adult_ticket_price.to_i} each"
                  = f.number_field :adults, class: 'input-mini', min: 1, required: true,
                    max: @event.max_adult_tickets_per_request,
                    data: { default_price: @event.adult_ticket_price.to_i }

                  %strong.help-inline.inline-price

                  - if @event.kid_ticket_price

                    = f.label :kids do
                      Number of children (12 and under) you are bringing with you (not transferable to adults; babes in arms are free)
                      = help_mark help_text_for(:kids)

                    = f.number_field :kids, class: 'input-mini', min: 0,
                      max: @event.max_kid_tickets_per_request,
                      data: { default_price: @event.kid_ticket_price.to_i,
                              custom_prices: price_rules_to_json(@event) }

                    %span.help-inline.inline-price
                    %p.help-inline-block.muted


                    - unless is_update
                      .card.bg-warning-subtle.mb-3{:style => "max-width: 100%;"}
                        .card-body.bg-success-subtle.text-dark.pt-1
                          %h5.card-title Please Note:
                          %p.card-text
                            Once you submit this ticket request, and it's approved, you'll receive an email stating so. You can also bookmark this URL and return to it at a later date.
                            In order to pay for the ticket(s) you are required to fill out the list of guests (if any) and kids (if any) you are bringing and/or inviting.

                  -# - if false @event.cabin_price

                    = f.label :cabins do
                      How many cabins did you want?
                      = help_mark help_text_for(:cabins)

                    = f.number_field :cabins, class: 'input-mini', min: 0,
                      max: @event.max_cabins_per_request,
                      data: { default_price: @event.cabin_price.to_i },
                      disabled: !@event.cabins_available?

                    %span.help-inline.inline-price
                      - unless @event.cabins_available?
                        Sorry, we are sold out of cabins at this point in time.
              .col-lg-6.col-xl-6.col-md-12.col-sm-12
                .control-group

                - if @event.allow_financial_assistance
                  %br
                  = f.label :needs_assistance, class: 'checkbox' do
                    = f.check_box :needs_assistance
                    Iâ€™m requesting financial assistance with purchasing my ticket(s)
                    = help_mark help_text_for(:needs_assistance)

                .control-group

                - if @event.require_mailing_address
                  %fieldset
                    = f.label :address_line1, class: 'required-label' do
                      Address1
                      = help_mark help_text_for(:address)
                    = f.text_field :address_line1, required: true, placeholder: 'Street address, P.O. box, etc.', maxlength: 200
                    = f.label :address_line2 do
                      Address2
                    = f.text_field :address_line2, placeholder: 'Apartment, suite, unit, building, floor, etc.', maxlength: 200
                    = f.label :city, 'City', class: 'required-label'
                    = f.text_field :city, required: true, maxlength: 50
                    = f.label :state, 'State/Province/Region', class: 'required-label'
                    = f.text_field :state, required: true, maxlength: 50
                    = f.label :zip_code, 'Zip/Postal Code', class: 'required-label'
                    = f.text_field :zip_code, required: true, maxlength: 32
                    = f.label :country_code, 'Country', class: 'required-label'
                    = f.country_select "country_code", iso_codes: true, default_value: 'US'

                .control-group
                  = f.label :notes do
                    Who did you hear about this event from?
                    Any special requests or things you want to mention?
                    %br

                  = f.text_area :notes,
                    rows: 4, columns: 100, maxlength: 500, style: 'width: 100%'

                  - if signed_in? && @event.admin?(current_user) && form_action_name == :update
                    .well
                      = f.label :admin_notes do
                        Additional Notes
                      %p.text-error
                        Visible by event admins only.
                      = f.text_area :admin_notes, rows: 5, columns: 800, maxlength: 512, style: 'width: 100%'
                    %br

                - unless is_update
                  %p
                    Every year, every attendee, no matter how long they've been coming, must
                    acquaint themselves with our values and Code of Conduct. Please acknowledge
                    you've done so this year.
                  = f.label :agrees_to_terms, class: 'checkbox' do
                    = f.check_box :agrees_to_terms
                    Iâ€™ve read
                    = link_to 'The FnF Way', 'https://fnf.events/the-fnf-way/', target: '_blank', onclick: "popupWindow('https://fnf.events/the-fnf-way/', 'The FnF Way', window, 700, 900); return false;"
                    and
                    = link_to 'Code of Conduct', 'https://fnf.page.link/coc', target: '_blank', onclick: "popupWindow('https://fnf.page.link/coc', 'Code of Conduct', window, 800, 900); return false;"
                    and agree to follow the principles outlined therein
                  %br


                .actions
                  - submit_btn_text = is_update ? 'Update Request' : 'Submit Request'
                  = f.submit submit_btn_text, class: 'btn btn-primary btn-large', disabled: !is_update,
                             id: 'submit-request',
                             data: { disable_with: 'Submitting...' }
                  - if @ticket_request && @ticket_request.id
                    = link_to event_ticket_request_path(event_id: @event.id, id: @ticket_request&.id), method: :get, class: 'btn btn-large btn-danger' do
                      Back


